{"version":3,"sources":["services/Api/Api.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","Api","fetchImages","searchQuery","page","get","then","response","data","hits","console","log","ButtonMore","Button","onClick","type","ImageGalleryItemLi","ImageGalleryItemImage","ImageGalleryItem","alt","webformatURL","largeImageURL","loadLargeImageURL","src","ImageGalleryList","ImageGallery","images","onSelect","map","id","tags","SpinnerContainer","Loader","color","height","width","timeout","Component","Overlay","ModalContainer","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeydown","removeEventListener","e","code","createPortal","currentTarget","target","SearchHeader","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","Searchbar","onSubmit","useState","setSearchQuery","preventDefault","trim","toast","warn","position","autoClose","autocomplete","autoFocus","onChange","value","placeholder","App","error","setError","setImages","isLoading","setIsLoading","selectedImage","setSelectedImage","setPage","showModal","setShowModal","responseImages","prevImages","catch","message","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","length","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44df29df.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst API_KEY = '21723163-ca21d56557a4a0bebd6e19c52';\r\n\r\nfunction fetchImages ({searchQuery, page}) {\r\n  try {\r\n    return axios\r\n    .get(`?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(response => response.data.hits)\r\n  } catch {\r\n    console.log('error')\r\n  }\r\n}\r\n\r\nconst Api = {\r\n  fetchImages\r\n}\r\n\r\nexport default Api;","import styled from '@emotion/styled/macro';\r\n\r\nexport const ButtonMore = styled.button`\r\n  padding: 8px 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 12px;\r\n  margin-bottom: 12px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &Button:hover,\r\n  Button:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`","import { ButtonMore } from './Button.styled';\r\n\r\nconst Button = ({onClick}) => {\r\n  return(<ButtonMore type=\"button\" onClick={onClick}>Load more</ButtonMore>)\r\n}\r\n\r\nexport default Button;","import styled from '@emotion/styled/macro';\r\n\r\nexport const ImageGalleryItemLi = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nexport const ImageGalleryItemImage = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ImageGalleryItemLi, ImageGalleryItemImage } from './ImageGalleryItem.styled';\r\n\r\nconst ImageGalleryItem = ({ alt=\"\", webformatURL, largeImageURL, loadLargeImageURL }) => {\r\n  return(\r\n    <ImageGalleryItemLi>\r\n      <ImageGalleryItemImage \r\n        alt={alt}\r\n        src={webformatURL}\r\n        onClick={()=>loadLargeImageURL(largeImageURL)}\r\n      />\r\n    </ImageGalleryItemLi>\r\n  )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    alt: PropTypes.string,\r\n    loadLargeImageURL: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ImageGalleryItem;","import styled from '@emotion/styled/macro';\r\n\r\nexport const ImageGalleryList = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from 'components/ImageGalleryItem';\r\nimport { ImageGalleryList } from './ImageGallery.styled';\r\n\r\nconst ImageGallery = ({images, onSelect}) => {\r\n  return (\r\n    <ImageGalleryList>\r\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <ImageGalleryItem \r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          alt={tags}\r\n          loadLargeImageURL={onSelect}\r\n        />\r\n      ))}\r\n    </ImageGalleryList>\r\n  )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import styled from '@emotion/styled/macro';\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`","import React, { Component } from 'react'\r\nimport Spinner from \"react-loader-spinner\";\r\nimport { SpinnerContainer } from './Loader.styled';\r\n\r\nexport default class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <SpinnerContainer>\r\n        <Spinner\r\n          type=\"Circles\"\r\n          color=\"#3f51b5\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000}\r\n        />\r\n      </SpinnerContainer>\r\n    );\r\n  }\r\n}","import styled from '@emotion/styled/macro';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`\r\n\r\nexport const ModalContainer = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport { Overlay, ModalContainer } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal ({ onClose, largeImageURL }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeydown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeydown);\r\n    }\r\n  })\r\n\r\n  const handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <Overlay onClick={handleBackdropClick}>\r\n      <ModalContainer>\r\n      <img src={largeImageURL} alt=\"\" />\r\n      </ModalContainer>\r\n    </Overlay>, modalRoot\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};","import styled from '@emotion/styled/macro';\r\n\r\nexport const SearchHeader = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const SearchFormButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n  opacity: 1;\r\n  }\r\n`\r\n\r\nexport const SearchFormButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`\r\n\r\nexport const SearchFormInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { SearchHeader, SearchForm, SearchFormButton, SearchFormButtonLabel, SearchFormInput } from './Searchbar.styled';\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (searchQuery.trim() === \"\"){\r\n      toast.warn('no request - no picture=)', {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        });\r\n      return;\r\n    }\r\n    onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  return(\r\n    <SearchHeader>\r\n      <SearchForm onSubmit={handleSubmit}>\r\n        <SearchFormButton type=\"submit\">\r\n          <SearchFormButtonLabel>\r\n          Search\r\n          </SearchFormButtonLabel>\r\n        </SearchFormButton>\r\n        <SearchFormInput \r\n          autocomplete=\"off\"\r\n          autoFocus\r\n          onChange={handleChange}\r\n          placeholder=\"Search images and photos\"\r\n          type=\"text\"\r\n          value={searchQuery}\r\n        />\r\n      </SearchForm>\r\n    </SearchHeader>\r\n  )\r\n}\r\n\r\n\r\n  \r\n","import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Api from 'services/Api';\nimport Button from 'components/Button';\nimport ImageGallery from 'components/ImageGallery';\nimport Loader from 'components/Loader';\nimport Modal from 'components/Modal';\nimport Searchbar from 'components/Searchbar';\n\nexport default function App() {\n  const [error, setError] = useState(null);\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [page, setPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n\n    setIsLoading(true);\n\n    Api.fetchImages({ searchQuery, page })\n      .then(responseImages => {\n        setImages(prevImages => [...prevImages, ...responseImages]);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => setIsLoading(false));\n  }, [searchQuery, page]);\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  });\n\n  // const fetchImages = () => {\n  //   setIsLoading(true);\n\n  //   Api.fetchImages({ searchQuery: searchQuery, page })\n  //     .then(responseImages => {\n  //       setImages(prevImages => [...prevImages, ...responseImages]);\n  //       setPage(prevPage => prevPage + 1);\n  //     })\n  //     .finally(() => setIsLoading(false));\n  // };\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.searchQuery !== this.state.searchQuery) {\n  //     fetchImages();\n  //   }\n\n  //   if (this.state.page !== 2 && prevState.page !== this.state.page) {\n\n  //   }\n  // }\n  // useEffect(() => {fetchImages()})\n  // const fetchImages = () => {\n  //   toggleLoader();\n\n  //   Api.fetchImages({ searchQuery, page })\n  //     .then(hits => {\n  //       this.setState(prevState => ({\n  //         images: [...prevState.images, ...hits],\n  //         page: prevState.page + 1,\n  //       }));\n  //     })\n  //     .catch(error => this.setState({ error: true }))\n  //     .finally(() => this.setState(this.toggleLoader()));\n  // };\n\n  const loadLargeImageURL = largeImageURL => {\n    setSelectedImage(largeImageURL);\n    toggleModal();\n  };\n\n  const handleSubmit = value => {\n    setError(null);\n    setImages([]);\n    setPage(1);\n    setSearchQuery(value);\n  };\n\n  // const toggleLoader = () => {\n  //   setIsLoading(prevState => !prevState.isLoading);\n  // };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      {error &&\n        toast.error('there are no such pictures!', {\n          position: 'top-right',\n          autoClose: 3000,\n        })}\n      <Searchbar onSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      <ImageGallery images={images} onSelect={loadLargeImageURL} />\n      {images.length > 11 && <Button onClick={onLoadMore} />}\n      {showModal && (\n        <Modal onClose={toggleModal} largeImageURL={selectedImage} />\n      )}\n      {<ToastContainer position=\"top-right\" autoClose={3000} />}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}